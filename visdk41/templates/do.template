
import logging
from pyvisdk.exceptions import InvalidArgumentError

########################################
# Automatically generated, do not edit.
########################################

log = logging.getLogger(__name__)

def {{ classname }}(vim, *args, **kwargs):
    '''{{ description|wordwrap|indent(4) }}'''
    
    obj = vim.client.factory.create('ns0:{{ classname }}')
    
    # do some validation checking...
    if (len(args) + len(kwargs)) < {{ required_len }}:
        raise IndexError('Expected at least {{ required_len +1 }} arguments got: %d' % len(args))
        
    required = [ {{ required_props|quote|join(', ')|wordwrap|indent(8) }} ]
    optional = [ {{ optional_props|quote|join(', ')|wordwrap|indent(8) }} ]
    
    for name, arg in zip(required+optional, args):
        setattr(obj, name, arg)
    
    for name, value in kwargs.items():
        if name in required + optional:
            setattr(obj, name, value)
        else:
            raise InvalidArgumentError("Invalid argument: %s.  Expected one of %s" % (name, ", ".join(required + optional)))

    return obj
    
